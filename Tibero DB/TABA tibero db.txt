Tibero 접속 id : tibero
Tibero 접속 pw : tibero

4page

Lister
클라이언트의 새로운 저복 요청을 받아 이를 유휴한 워커프로세스에 할당.
클라이언트와 워커 프로세스간에 중계 역할을 담당하며 별도의 실행 파일인 tlblistener를 사용하여 작업
모니터링 프로세스에 의해서 생성되면 외부에서 강제 종료하더라도 자동으로 재시작

클라이언트의 새로운 접속 요청이 이루어지는 순서

1. 클라이언트가 접속 요청
2. Linstener 는 현재 빈 WTHR이 있는 프로세스를 찾아서 이 사용자의 접속 요청을 CTHR에게 넘겨줌
3. 요청을 받은 CTHR은 자기 자신의 WTHR 상태를 체크해서 일하지 않는 WTHR에게 할당
4. WTHR은 클라이언트와 인증 절차를 걸쳐 세션 시작

5page

워커프로세스

클라이언트와 실제 통신을 하며 사용자 요구 사항을 처리하는 프로세스
Foreground Worker Process : 리스너를 통해 들어온 온라인 요청 처리
Background Worker Process : Internal Task 나 Job Schedular에 등록된 배치 작업을 수행

CTHR 
각 워킹프로세스 마다 하나씩 생성, 서버 시작시에 지정된 개수의 워커 스레드를 생성
시그널 처리 담당
IO 멀티 플렉싱을 지원하고, 필요한 경우 워커스레드 대신 메시지 송수신 역할 수행

WTHR
각 워커프로세스마다 여러개 생성
클라이언트가 보내는 메시지를 받아 처리하고 그 결과를 반환
SQL Parsing , 최적화, 수행 등 DBMS가 해야하는 대부분의 일을 처리


Background Process

사용자의 요청을 직접 받아들이지는 않고 워커스레드나 다른 배경 프로세스가 요청할 떄 혹은 정해진 주기에 따라 동작하며 주로 시간이 오래 걸리는 디스크 작업을 담당

독립된 프로세스로서 사용자의 요청과 비동기적으로 동작
감시 프로세스 MONP
매니저 프로세스 MGWP
에이전트 프로세스 AGNT
데이터베이스 쓰기 프로젝트 DBWR
복구 프로세스 RCWP

page 6

감시프로세스 MONP

Tibero 기동 시 최초로 생성되며 종료 시에도 마지막에 종료
TIbero 기동 시 리스너를 포함한 다른 프로세스를 생성하고 주기적으로 프로세스의 상태를 점검함
교착상태도 검사

매니저 프로세스 MGWP

시스템 관리용도 프로세스
관리자의 접속 요청을 받아 이를 시스템 관리 용도로 예약된 워커 스레드에 접속을 할당
기본적으로 워커프로세스와 동일한 역할을 수행하지만 리스너를 거치지 않고 스페셜 포트를 통해 직접 접속
SYS 계정만 접속이 허용 LOCAL 에서만 접속 가능

에이전트 프로세스 AGBT

시스템 유지를 이해 주기적으로 처리해야하는 Tibero 내부의 작업을 담당
Internal Task나 Batch Job이 언제 수행되어야 하는지 판단은 AGENT 프로세스가 담당하지만 실제 수행은 포어그라운드 혹 백그라운드 워커 프로세스에게 의뢰하는 구조

다중 스레드 기반 구조로 동작하고 서로 다른 용도의 업무를 스레드 별로 나누어 수행

데이터베이스 쓰기 프로세스
데이터베이스에서 변경된 내용을 디스크에 기록하는 일과 연관된 스레드들이 모여있는 프로세스
사용자가 변경한 블록을 디스크에 주기적으로 기록하는 스레드
리두 로그를 디스크에 기록하는 스레드
두 스레드를 통해 데이터베이스의 체크포인트 과정을 관할하는 체크포인트 스레드

복구 프로세스(REWP)
복구전용 프로세스
Crash / Instance Recovery 수행

page 7

Tibero Shared Memory

인스턴스에 대한 데이터와 제어 정보를 가지는 공유 메모리 영역
사용자가 동시에 데이터를 공유

chat gpt answer

Tibero는 대규모 데이터베이스 시스템으로, 메모리 기반 데이터베이스 및 디스크 기반 데이터베이스를 지원합니다. Tibero는 다른 데이터베이스 시스템과 마찬가지로 데이터를 디스크에 저장하고, 데이터에 대한 요청이 있을 때 디스크에서 읽어와 메모리에 적재하여 처리합니다. 이때 Tibero는 메모리를 관리하기 위해 Shared Memory 기술을 사용합니다.

Shared Memory는 프로세스 간에 메모리를 공유하는 기술로, 하나의 프로세스가 생성한 데이터를 다른 프로세스에서도 접근할 수 있도록 합니다. Tibero에서 Shared Memory는 여러 개의 프로세스가 동시에 접근할 수 있는 공유 메모리 영역으로 사용됩니다. 이 공유 메모리 영역은 주로 데이터베이스 버퍼 캐시와 로그 버퍼를 저장하는 데 사용됩니다.

Tibero의 Shared Memory는 크게 두 가지로 구성됩니다. 하나는 데이터베이스 버퍼 캐시를 저장하는 Buffer Pool입니다. Buffer Pool은 디스크에서 읽어온 데이터를 메모리에 적재하여 처리할 때 사용됩니다. 또 다른 하나는 로그 버퍼를 저장하는 Log Buffer입니다. Log Buffer는 데이터베이스에서 발생하는 작업을 로그로 기록하기 위한 메모리 영역입니다.

Tibero의 Shared Memory는 여러 프로세스에서 동시에 접근할 수 있도록 설계되어 있으며, 고성능 및 안정성을 보장하기 위해 다양한 기술과 알고리즘이 사용됩니다. 예를 들어, Tibero는 멀티버전 동시성 제어(Multi-Version Concurrency Control, MVCC) 기술을 사용하여 동시성 문제를 해결합니다. 또한, Buffer Pool과 Log Buffer의 크기를 동적으로 조정하는 기능을 제공하여 최적의 성능을 유지합니다.




Database Buffer

Tibero Database Buffer는 메모리 기반 데이터베이스에서 디스크 기반 데이터를 캐시하여 빠르게 접근할 수 있도록 하는 메모리 영역입니다. 이를 통해 디스크에서 데이터를 읽어오는 시간을 줄여 데이터베이스의 처리 성능을 향상시킬 수 있습니다.

Tibero의 Database Buffer는 크게 두 가지 종류가 있습니다. 하나는 데이터를 읽어올 때 사용하는 Read Buffer이고, 다른 하나는 데이터를 변경할 때 사용하는 Write Buffer입니다. Read Buffer는 디스크에서 데이터를 읽어올 때 사용되며, Read Buffer에 저장된 데이터는 디스크에서 읽어온 후 일정 시간 동안 유지됩니다. 이를 통해 같은 데이터를 다시 읽어올 때 디스크에서 읽어오는 것이 아니라 메모리에서 바로 가져올 수 있으므로 처리 성능이 향상됩니다.

Write Buffer는 데이터를 변경할 때 사용됩니다. 변경된 데이터는 Write Buffer에 기록되며, 일정 시간 동안 Write Buffer에 있는 데이터는 메모리 상에서만 변경된 것으로 처리됩니다. 이를 통해 변경된 데이터를 바로 디스크에 기록하지 않고, 메모리에 임시로 보관하여 처리 성능을 향상시킬 수 있습니다. 일정 시간이 지나면 Write Buffer에 있는 데이터는 디스크에 기록됩니다.

Tibero의 Database Buffer는 데이터 압축 기능도 제공합니다. 압축된 데이터는 메모리에 저장되는 용량을 줄이므로, 더 많은 데이터를 메모리에 저장할 수 있게 됩니다. 또한, Tibero는 Buffer Pool을 동적으로 조정하는 기능도 제공합니다. 이를 통해 시스템의 부하에 따라 Buffer Pool의 크기를 동적으로 조정하여 최적의 성능을 유지할 수 있습니다.

Redo Log Buffer

Tibero Redo Log Buffer는 데이터베이스에서 발생하는 작업을 로그로 기록하기 위한 메모리 영역입니다. 이를 통해 시스템이 갑작스런 장애나 오류 상황에서 데이터 손실을 최소화하고 데이터 일관성을 유지할 수 있습니다.

Tibero의 Redo Log Buffer는 크게 두 가지 역할을 수행합니다. 하나는 데이터베이스에서 발생하는 작업을 로그로 기록하는 역할이고, 다른 하나는 로그 기록을 디스크에 반영하는 역할입니다.

데이터베이스에서 발생하는 작업은 삽입, 삭제, 수정 등의 작업이 포함됩니다. 이러한 작업이 발생하면 Tibero는 Redo Log Buffer에 해당 작업을 로그로 기록합니다. 로그는 디스크에 기록하기 전에 일정 시간 동안 Redo Log Buffer에 유지됩니다.

Tibero의 Redo Log Buffer는 주기적으로 디스크에 로그를 기록합니다. 로그 기록은 커밋 트랜잭션 단위로 수행됩니다. 커밋 트랜잭션은 데이터베이스에서의 일련의 작업을 묶어서 하나의 트랜잭션으로 처리하는 것을 의미합니다. 커밋 트랜잭션이 완료되면, Tibero는 Redo Log Buffer에 있는 로그를 디스크에 기록합니다.

Tibero의 Redo Log Buffer는 데이터 일관성을 유지하기 위해 매우 중요한 역할을 합니다. 예를 들어, 갑작스러운 시스템 장애가 발생했을 때, 디스크에 저장된 데이터는 손상될 수 있습니다. 이때 Redo Log Buffer에 있는 로그를 사용하여 디스크에 저장된 데이터를 복원할 수 있습니다. 또한, Tibero는 Redo Log Buffer를 사용하여 데이터베이스 복구를 수행할 수도 있습니다.


Background Process는 인스턴스가 시작될 때 TSM 영역을 할당하고 인스턴스가 종료하면 할당해제

TSM의 전체 크기는 인스턴스가 시작될 때 생산되어 고정



