Tibero Database 구조

하나 혹은 그 이상의 control files, Datagiles 그리고 Redo log files

Datafiles
 - Tables , indexes 들과 같은 Logical structure들은 물리적으로 Datafiles에 저장되는 파일
Redo Log files
 - 복구를 위하여 Database에서 변경된 모든 것을 기록하는 파일
Control FIles
 - Database의 물리적 구조와 상태를 기록하는 파일

Tibero Database 파일 저장 방식

운영체제의 파일 시스템
 - 일반적으로 파일 시스템은 논리볼륨관리자(LVM)에 의해 생성되니 논리볼륨을 기반으로 구축되어있고 LVM은 서로다른 물리적 디스크 영역을 하나의 연속된 주소 공간으로 결합하여 제공

Tibero Active Storge
 - Tibero Database에서 사용하는 전용 파일 시스템
 - TIbero TAC 환경에서 TAS를 기반으로 데이터베이스를 생성하여 운영할 수 있음

RAW 장치

 - Raw Device는 파일시스템으로 포멧되어 있지않은 디스크 파티션 혹은 논리 볼륨으로, 파일 시스템과 달리 캐시를 거치지 않고 직접 IO를 수행
 - TIbero TAC 환경에서 TAS를 기반으로 데이터베이스를 생성하여 운영

클러스터 파일 시스템
 - 클러스터 파일 시스템은 여러 컴퓨터에서 파일의 저장소르 공유하는 기능을 제공함
 - Tibero TAC 환경에서 클러스터 파일시스템을 기반으로 데이터베이스를 생성하여 운영

Datafiles

 - Tibero Database는 데이터 파일이라는 구조에 데이터베이스 데이터를 저장
 - Tablespace는 하나 이상의 물리적인 datafile을 가지며, 하나의 datafile은 오직 하나의 Tablespace에 포함
 - 세그먼트는 하나 이상의 데이터 파일에 걸쳐있을 수 있지만, 여러 테이블 스페이스에 걸쳐져 있는 것은 아니다.


일반 테이블스페이스의 영속적인 데이터 파일
 - 테이블 , 인덱스와 같은 영구적인 스키마 객체가 포함되며, 데이터 파일에 저장 관리됨

임시 테이블 스페이스의 임시파일

 - 세션의 또는 트랜잭션 지속시간 동안 임시 테이블과 같은 스키마 객체의 데이터가 존재하며, 메모리에서의 해시 및 정렬 등의 작업 메모리 공간이 부족했을 때의 저장소로 사용됨
- 일반 테이블의 영구적인 데이터는 임시파일에 저장되지 않는다.
- 임시 파일을 사용하는 스키마 오브젝트는 NOLOGGING 모드로 설정되며 미디어 복구가 안됨.
- 임시 파일은 DBA_TEMP_FILES , V$TEMPFILE에서 모니터링 할 수 있고, 일반 데이터 파일을 조회하는 DBA_DATA_FILES, V$DATAFILE 뷰에서는 표시되지 않음

온라인 데이터 파일 및 오프라인 데이터 파일

 - 모든 데이터 파일은 온라인 또는 오프라인 상태에 해당됨
 - MOUNT 모드에서 데이터 파일을 오프라인 변경 후, 테이블 스페이스를 삭제할 수 있음
 - 테이블스페이스를 오프라인으로 변경하면 연결된 데이터파일 또한 오프라인 상태가 됨
 - 데이터파일의 이름과 경로를 바꾸기 위해서는 해당 테이블 스페이스를 오프라인 상태로 설정하고 변경 가능


데이터 파일의 구조

데이터 파일의 헤더

- 데이터 사이즈에 대한 정보, 체크 포인트 TSN 데이터베이스에서 고유하게 식별하기 위한 파일 절대번호, 테이블 스페이스에서 데이터 파일을 식별하기 위한 파일 상대번호 등의 메타 정보 포함


사용 공간

미사용 (이전에 사용되었으나, 현재 미사용)

- 데이터의 갱신 또는 삭제가 반복되면 중간 사용하지 않는 공간이 존재, 재사용하기에는 작은 크기일 경우 이를 조각난 공간이라 한다.

사용 공간 

미사용 (한 번도 사용되지 않음)

 - 데이터 파일을 생성시 초기 포멧된 공간으로 테이블 스페이스의 데이터 증가시 데이터 파일의 여유 공간을 사용하여 세그먼트에 익스텐트를 할당하게 됨

Online Redo Log Files

데이터 변경 내용
TSN과 타임 스탬프	
트렌젝션 ID
트랜잭션이 커밋 될 때의 TSN과 타임 스탬프
변경을 수행한 작업의 유형
변경된 데이터 세그먼트의 이름 및 유형

복구를 위해 데이터베이스 변경사항을 기록하고, 리두 로그 그룹은 적어도 2개 이상으로 순환하며 사용


